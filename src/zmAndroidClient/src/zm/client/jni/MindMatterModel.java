/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package zm.client.jni;

public class MindMatterModel {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected MindMatterModel(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MindMatterModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javaZmJNI.delete_MindMatterModel(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MindMatterModel() {
    this(javaZmJNI.new_MindMatterModel(), true);
  }

  public static MindMatterModel create() {
    long cPtr = javaZmJNI.MindMatterModel_create();
    return (cPtr == 0) ? null : new MindMatterModel(cPtr, true);
  }

  public MindMatterModel base() {
    long cPtr = javaZmJNI.MindMatterModel_base(swigCPtr, this);
    return (cPtr == 0) ? null : new MindMatterModel(cPtr, true);
  }

  public void setConfigpersistence(boolean value) {
    javaZmJNI.MindMatterModel_setConfigpersistence(swigCPtr, this, value);
  }

  public void setLocalFolder(String path) {
    javaZmJNI.MindMatterModel_setLocalFolder(swigCPtr, this, path);
  }

  public String getLocalFolder() {
    return javaZmJNI.MindMatterModel_getLocalFolder(swigCPtr, this);
  }

  public void addDomainSyncFolder(String domainName, String path) {
    javaZmJNI.MindMatterModel_addDomainSyncFolder(swigCPtr, this, domainName, path);
  }

  public void disableHashChecking() {
    javaZmJNI.MindMatterModel_disableHashChecking(swigCPtr, this);
  }

  public void setTraceLevel(int level) {
    javaZmJNI.MindMatterModel_setTraceLevel(swigCPtr, this, level);
  }

  public void initialize() {
    javaZmJNI.MindMatterModel_initialize(swigCPtr, this);
  }

  public boolean equals(MindMatterModel other, boolean tell_why) {
    return javaZmJNI.MindMatterModel_equals__SWIG_0(swigCPtr, this, MindMatterModel.getCPtr(other), other, tell_why);
  }

  public boolean equals(MindMatterModel other) {
    return javaZmJNI.MindMatterModel_equals__SWIG_1(swigCPtr, this, MindMatterModel.getCPtr(other), other);
  }

  public boolean hasLocalChanges() {
    return javaZmJNI.MindMatterModel_hasLocalChanges(swigCPtr, this);
  }

  public boolean hasRemoteChanges() {
    return javaZmJNI.MindMatterModel_hasRemoteChanges(swigCPtr, this);
  }

  public void duplicateModelTo(MindMatterModel other) {
    javaZmJNI.MindMatterModel_duplicateModelTo(swigCPtr, this, MindMatterModel.getCPtr(other), other);
  }

  public String createHash(boolean verbose) {
    return javaZmJNI.MindMatterModel_createHash__SWIG_0(swigCPtr, this, verbose);
  }

  public String createHash() {
    return javaZmJNI.MindMatterModel_createHash__SWIG_1(swigCPtr, this);
  }

  public void persistence_saveLocalModel() {
    javaZmJNI.MindMatterModel_persistence_saveLocalModel(swigCPtr, this);
  }

  public boolean persistence_loadLocalModel() {
    return javaZmJNI.MindMatterModel_persistence_loadLocalModel(swigCPtr, this);
  }

  public boolean persistence_loadSnapshot() {
    return javaZmJNI.MindMatterModel_persistence_loadSnapshot(swigCPtr, this);
  }

  public boolean persistence_createSnapshot() {
    return javaZmJNI.MindMatterModel_persistence_createSnapshot(swigCPtr, this);
  }

  public void saveLocal() {
    javaZmJNI.MindMatterModel_saveLocal(swigCPtr, this);
  }

  public boolean loadLocal() {
    return javaZmJNI.MindMatterModel_loadLocal(swigCPtr, this);
  }

  public boolean loadSnapshot() {
    return javaZmJNI.MindMatterModel_loadSnapshot(swigCPtr, this);
  }

  public boolean createSnapshot() {
    return javaZmJNI.MindMatterModel_createSnapshot(swigCPtr, this);
  }

  public StringVec diffLocal() {
    return new StringVec(javaZmJNI.MindMatterModel_diffLocal(swigCPtr, this), true);
  }

  public StringVec diffRemote() {
    return new StringVec(javaZmJNI.MindMatterModel_diffRemote(swigCPtr, this), true);
  }

  public boolean sync_pull() {
    return javaZmJNI.MindMatterModel_sync_pull(swigCPtr, this);
  }

  public boolean sync_push() {
    return javaZmJNI.MindMatterModel_sync_push(swigCPtr, this);
  }

  public void applyChangeSet(ChangeSet changeSet) {
    javaZmJNI.MindMatterModel_applyChangeSet(swigCPtr, this, ChangeSet.getCPtr(changeSet), changeSet);
  }

  public boolean hasUsedUsername() {
    return javaZmJNI.MindMatterModel_hasUsedUsername(swigCPtr, this);
  }

  public void setUsedUsername(String username) {
    javaZmJNI.MindMatterModel_setUsedUsername(swigCPtr, this, username);
  }

  public boolean hasUsedHostname() {
    return javaZmJNI.MindMatterModel_hasUsedHostname(swigCPtr, this);
  }

  public void setUsedHostname(String hostname) {
    javaZmJNI.MindMatterModel_setUsedHostname(swigCPtr, this, hostname);
  }

  public ChangeSet diffTo(MindMatterModel other) {
    return new ChangeSet(javaZmJNI.MindMatterModel_diffTo(swigCPtr, this, MindMatterModel.getCPtr(other), other), true);
  }

  public void debug_dump() {
    javaZmJNI.MindMatterModel_debug_dump(swigCPtr, this);
  }

  public boolean isConsistent() {
    return javaZmJNI.MindMatterModel_isConsistent(swigCPtr, this);
  }

  public long getItemCount() {
    return javaZmJNI.MindMatterModel_getItemCount(swigCPtr, this);
  }

  public StringVec query(String query_str) {
    return new StringVec(javaZmJNI.MindMatterModel_query(swigCPtr, this, query_str), true);
  }

  public String completeUid(String uidPrefix) {
    return javaZmJNI.MindMatterModel_completeUid(swigCPtr, this, uidPrefix);
  }

  public StringVec getItems() {
    return new StringVec(javaZmJNI.MindMatterModel_getItems(swigCPtr, this), true);
  }

  public StringVec getFolderChildren(String folder_item) {
    return new StringVec(javaZmJNI.MindMatterModel_getFolderChildren(swigCPtr, this, folder_item), true);
  }

  public SWIGTYPE_p_std__time_t getCreationTime(String uid) {
    return new SWIGTYPE_p_std__time_t(javaZmJNI.MindMatterModel_getCreationTime(swigCPtr, this, uid), true);
  }

  public boolean hasItem(String uid) {
    return javaZmJNI.MindMatterModel_hasItem(swigCPtr, this, uid);
  }

  public String getValue(String uid, String name) {
    return javaZmJNI.MindMatterModel_getValue(swigCPtr, this, uid, name);
  }

  public String getCaption(String uid) {
    return javaZmJNI.MindMatterModel_getCaption(swigCPtr, this, uid);
  }

  public boolean isTag(String uid) {
    return javaZmJNI.MindMatterModel_isTag(swigCPtr, this, uid);
  }

  public boolean hasTag(String uid, String tag_name) {
    return javaZmJNI.MindMatterModel_hasTag(swigCPtr, this, uid, tag_name);
  }

  public boolean hasValue(String uid, String name) {
    return javaZmJNI.MindMatterModel_hasValue(swigCPtr, this, uid, name);
  }

  public boolean itemContentMatchesString(String uid, String searchString) {
    return javaZmJNI.MindMatterModel_itemContentMatchesString(swigCPtr, this, uid, searchString);
  }

  public boolean isConnected(String node1_uid, String node2_uid) {
    return javaZmJNI.MindMatterModel_isConnected(swigCPtr, this, node1_uid, node2_uid);
  }

  public StringVec getNeighbours(String node_uid) {
    return new StringVec(javaZmJNI.MindMatterModel_getNeighbours(swigCPtr, this, node_uid), true);
  }

  public StringVec getTags(String uid) {
    return new StringVec(javaZmJNI.MindMatterModel_getTags(swigCPtr, this, uid), true);
  }

  public StringVec getLoadedJournalFiles() {
    return new StringVec(javaZmJNI.MindMatterModel_getLoadedJournalFiles(swigCPtr, this), true);
  }

  public String createNewItem(String caption, String uid) {
    return javaZmJNI.MindMatterModel_createNewItem__SWIG_0(swigCPtr, this, caption, uid);
  }

  public String createNewItem(String caption) {
    return javaZmJNI.MindMatterModel_createNewItem__SWIG_1(swigCPtr, this, caption);
  }

  public void eraseItem(String uid) {
    javaZmJNI.MindMatterModel_eraseItem(swigCPtr, this, uid);
  }

  public void addTag(String uid, String tag_name) {
    javaZmJNI.MindMatterModel_addTag(swigCPtr, this, uid, tag_name);
  }

  public void becomeFolder(String item) {
    javaZmJNI.MindMatterModel_becomeFolder(swigCPtr, this, item);
  }

  public void putIntoFolder(String item, String folder) {
    javaZmJNI.MindMatterModel_putIntoFolder(swigCPtr, this, item, folder);
  }

  public boolean removeTag(String uid, String tag_name) {
    return javaZmJNI.MindMatterModel_removeTag(swigCPtr, this, uid, tag_name);
  }

  public void setValue(String uid, String name, String value) {
    javaZmJNI.MindMatterModel_setValue(swigCPtr, this, uid, name, value);
  }

  public void setCaption(String uid, String caption) {
    javaZmJNI.MindMatterModel_setCaption(swigCPtr, this, uid, caption);
  }

  public void connectDirected(String node1_uid, String node2_uid) {
    javaZmJNI.MindMatterModel_connectDirected(swigCPtr, this, node1_uid, node2_uid);
  }

  public void disconnect(String node1_uid, String node2_uid) {
    javaZmJNI.MindMatterModel_disconnect(swigCPtr, this, node1_uid, node2_uid);
  }

  public String findOrCreateTagItem(String name) {
    return javaZmJNI.MindMatterModel_findOrCreateTagItem(swigCPtr, this, name);
  }

  public final static class ConnectionType {
    public final static MindMatterModel.ConnectionType Undefined = new MindMatterModel.ConnectionType("Undefined", javaZmJNI.MindMatterModel_Undefined_get());
    public final static MindMatterModel.ConnectionType Undirected = new MindMatterModel.ConnectionType("Undirected", javaZmJNI.MindMatterModel_Undirected_get());
    public final static MindMatterModel.ConnectionType Directed = new MindMatterModel.ConnectionType("Directed", javaZmJNI.MindMatterModel_Directed_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ConnectionType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ConnectionType.class + " with value " + swigValue);
    }

    private ConnectionType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ConnectionType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ConnectionType(String swigName, ConnectionType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ConnectionType[] swigValues = { Undefined, Undirected, Directed };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
