zeitmaschine - GTD inspired home for thoughts
=============================================
:toc:
:icons:
:numbered:
:website: http://www.scitics.de
//=-~^+

next steps
----------

Most issues will be reported and handled in the local folder which which
will be accessed by Debug builds automatically.
However until most important scheduling features are available, the next
steps in development are listed here, too.

* Create a "snapshot model" if none exists
* Find a way to model subfolder relations, e.g.
  - have directed connections
  - have a "parent" property   (bad, since object resides in just one folder)
  - have "children" properties (requires lists)



requirements
------------

top level features
~~~~~~~~~~~~~~~~~~

.*F.00 - _GTD_*
****************************************************
Provide GTD-like self-management capabilities
****************************************************

.*F.01 - _note taking_*
****************************************************
* plain text
* file links
* context links
* brain stack
****************************************************


.*F.02 - _multi client_*
****************************************************
* syncing
****************************************************


.*F.03 - _search_*
****************************************************
****************************************************


.*F.04 - _supported platforms_*
****************************************************
* windows, linux, android, osx, ios
****************************************************


.*F.05 - _privacy_*
****************************************************
* crypting
****************************************************


.*F.06 - _multi user / visibility domains_*
****************************************************
****************************************************


.*F.07 - _project management_*
****************************************************
* time schedule
* ticket import/export
****************************************************


.*F.08 - _scheduling / priority_*
****************************************************
* provide next task
* priority, due dates, order, dismisses, contexts
****************************************************


.*F.09 - _item groups_*
****************************************************
****************************************************


.*F.10 - _tagging_*
****************************************************
****************************************************


.*F.11 - _time tracking_*
****************************************************
* keep track of current task -> ask
* record start/stop
* provide statistics
****************************************************


.*F.12 - _YSbox connectivity_*
****************************************************
* automatically issue searching
* ticket import/export
****************************************************


GUI / GTD
~~~~~~~~~

workflow
^^^^^^^^
* new
* cast to task
* cast to project
* cast to group
* cast to done
* cast to knowledge


ui-behaviour
^^^^^^^^^^^^

* [ ] inbox/projects initially pre-opened
* [ ] projects initially closed
* [ ] inbox items sorted by creation date
* [ ] knowledge items sorted by creation date
* [ ] items editable (double click, context menu, F2)
* [ ] item caption gets displayed
* [ ] item priority gets displayed
* [ ] dragability
* [ ] item captions editable

colors
^^^^^^
* today
* inbox
* project


MindMatter
~~~~~~~~~~

export
^^^^^^

sync
^^^^
* folder sync based
* conflict free

development environment
~~~~~~~~~~~~~~~~~~~~~~~
* tests

implementational details
------------------------

* Qt based interface for Linux/Windows/MacOS

block diagram
~~~~~~~~~~~~~
* UI Layer
* GTD-Layer
* MindMatter-Layer

sequences
~~~~~~~~~

["plantuml"]
--------------------------------------------------------------------------------
title Startup sequence

participant "Qt-Gui"        as gui    #99FF99
participant "GTD-Model"     as gtd    #aa77aa
participant "Things-Model"  as things #6666dd

gui   ->  gtd                 :   set username/hostname
          gtd   ->  things    :   set username/hostname
gui   ->  gtd                 :   set localfolder
          gtd   ->  things    :   set localfolder
gui   ->  gtd                 :   initialize
          gtd   ->  things    :   initialize
                    things   ->  things    :   compose filenames for\n model and temp. jounal
                    things   ->  things    :   load local journal
                    things   ->  things    :   <color:#aa2222> load new external journals
--------------------------------------------------------------------------------


design considerations
~~~~~~~~~~~~~~~~~~~~~

.*should item connections be part of items rather than stand alone?*
****************************************************************************************
currently: *yes*

.pro:
* whole model can be seen as sum of items rather than having additional
  entities for connections (easy)
* connections are a property of items as they are "in mind"

.con:
* connections are directional by default and must be saved twice
* design flaw: items have to know the concept of UIDs to make items capable
               of diffing connections from items of another model (with
               different pointers to equal items)
****************************************************************************************




